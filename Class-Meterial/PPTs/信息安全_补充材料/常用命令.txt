编译（关闭栈保护机制）：gcc -fno-stack-protector -o test test.c -m32 -g
编译（打开栈保护机制）：gcc -o test test.c -m32 -g
gdb调试：gdb ./test
打断点：b main
显示两个窗口，上面是源代码，下面是汇编指令：layout split
显示寄存器窗口:layout regs
输出变量a的值: print a
输出变量a的地址: print &a
增加观察点（观察某个变量的变化，每次变量的值发生变化时都会输出）：watch i
查看函数调用的堆栈信息: bt
查看调用堆栈和局部变量数值: bt full
看寄存器的值 i r
看某个内存地址的内容：x 地址
从esp所指向的地址开始向后显示11个地址空间内的值：x/11uw $esp（大家可以用这个指令输出数组a和i的值）
查看局部变量的值：info local
反汇编代码：disassemble
刷新窗口：Ctrl + L
Ctrl + x，再按a：回到传统模式，即退出layout，回到执行layout之前的调试窗口。